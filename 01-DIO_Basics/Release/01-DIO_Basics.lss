
01-DIO_Basics.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 a3 00 	jmp	0x146	; 0x146 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
  6c:	0f 93       	push	r16
  6e:	1f 93       	push	r17
  70:	cf 93       	push	r28
  72:	df 93       	push	r29
  74:	8f e0       	ldi	r24, 0x0F	; 15
  76:	8a bb       	out	0x1a, r24	; 26
  78:	1b ba       	out	0x1b, r1	; 27
  7a:	40 e0       	ldi	r20, 0x00	; 0
  7c:	50 e0       	ldi	r21, 0x00	; 0
  7e:	60 e0       	ldi	r22, 0x00	; 0
  80:	70 e0       	ldi	r23, 0x00	; 0
  82:	c6 e0       	ldi	r28, 0x06	; 6
  84:	d0 e0       	ldi	r29, 0x00	; 0
  86:	a1 e0       	ldi	r26, 0x01	; 1
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	08 ec       	ldi	r16, 0xC8	; 200
  8c:	10 e0       	ldi	r17, 0x00	; 0
  8e:	01 c0       	rjmp	.+2      	; 0x92 <main+0x26>
  90:	ba 01       	movw	r22, r20
  92:	2b b3       	in	r18, 0x1b	; 27
  94:	44 30       	cpi	r20, 0x04	; 4
  96:	51 05       	cpc	r21, r1
  98:	14 f4       	brge	.+4      	; 0x9e <main+0x32>
  9a:	cb 01       	movw	r24, r22
  9c:	03 c0       	rjmp	.+6      	; 0xa4 <main+0x38>
  9e:	ce 01       	movw	r24, r28
  a0:	84 1b       	sub	r24, r20
  a2:	95 0b       	sbc	r25, r21
  a4:	fd 01       	movw	r30, r26
  a6:	02 c0       	rjmp	.+4      	; 0xac <main+0x40>
  a8:	ee 0f       	add	r30, r30
  aa:	ff 1f       	adc	r31, r31
  ac:	8a 95       	dec	r24
  ae:	e2 f7       	brpl	.-8      	; 0xa8 <main+0x3c>
  b0:	cf 01       	movw	r24, r30
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	82 2b       	or	r24, r18
  b6:	93 2b       	or	r25, r19
  b8:	8b bb       	out	0x1b, r24	; 27
  ba:	80 e1       	ldi	r24, 0x10	; 16
  bc:	97 e2       	ldi	r25, 0x27	; 39
  be:	f8 01       	movw	r30, r16
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x54>
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	d9 f7       	brne	.-10     	; 0xbe <main+0x52>
  c8:	2b b3       	in	r18, 0x1b	; 27
  ca:	44 30       	cpi	r20, 0x04	; 4
  cc:	51 05       	cpc	r21, r1
  ce:	1c f0       	brlt	.+6      	; 0xd6 <main+0x6a>
  d0:	be 01       	movw	r22, r28
  d2:	64 1b       	sub	r22, r20
  d4:	75 0b       	sbc	r23, r21
  d6:	cd 01       	movw	r24, r26
  d8:	02 c0       	rjmp	.+4      	; 0xde <main+0x72>
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	6a 95       	dec	r22
  e0:	e2 f7       	brpl	.-8      	; 0xda <main+0x6e>
  e2:	80 95       	com	r24
  e4:	90 95       	com	r25
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	82 23       	and	r24, r18
  ea:	93 23       	and	r25, r19
  ec:	8b bb       	out	0x1b, r24	; 27
  ee:	4f 5f       	subi	r20, 0xFF	; 255
  f0:	5f 4f       	sbci	r21, 0xFF	; 255
  f2:	47 30       	cpi	r20, 0x07	; 7
  f4:	51 05       	cpc	r21, r1
  f6:	64 f2       	brlt	.-104    	; 0x90 <main+0x24>
  f8:	40 e0       	ldi	r20, 0x00	; 0
  fa:	50 e0       	ldi	r21, 0x00	; 0
  fc:	60 e0       	ldi	r22, 0x00	; 0
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	c8 cf       	rjmp	.-112    	; 0x92 <main+0x26>

00000102 <getBit>:
 102:	9c 01       	movw	r18, r24
 104:	02 c0       	rjmp	.+4      	; 0x10a <getBit+0x8>
 106:	35 95       	asr	r19
 108:	27 95       	ror	r18
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <getBit+0x4>
 10e:	21 70       	andi	r18, 0x01	; 1
 110:	30 70       	andi	r19, 0x00	; 0
 112:	c9 01       	movw	r24, r18
 114:	08 95       	ret

00000116 <setBit>:
 116:	21 e0       	ldi	r18, 0x01	; 1
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <setBit+0xa>
 11c:	22 0f       	add	r18, r18
 11e:	33 1f       	adc	r19, r19
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <setBit+0x6>
 124:	28 2b       	or	r18, r24
 126:	39 2b       	or	r19, r25
 128:	c9 01       	movw	r24, r18
 12a:	08 95       	ret

0000012c <clearBit>:
 12c:	21 e0       	ldi	r18, 0x01	; 1
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <clearBit+0xa>
 132:	22 0f       	add	r18, r18
 134:	33 1f       	adc	r19, r19
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <clearBit+0x6>
 13a:	20 95       	com	r18
 13c:	30 95       	com	r19
 13e:	28 23       	and	r18, r24
 140:	39 23       	and	r19, r25
 142:	c9 01       	movw	r24, r18
 144:	08 95       	ret

00000146 <_exit>:
 146:	f8 94       	cli

00000148 <__stop_program>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <__stop_program>
